#!/bin/sh

uci set luci.main.lang=en
uci commit luci

uci set system.@system[0].timezone=CST-8
uci set system.@system[0].zonename=Asia/Shanghai
uci commit system

uci set fstab.@global[0].anon_mount=1
uci commit fstab

rm -f /usr/lib/lua/luci/view/admin_status/index/mwan.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/upnp.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/ddns.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/minidlna.htm

sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/aria2.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/aria2/overview_status.htm
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/hd_idle.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/samba.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/minidlna.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/transmission.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/mjpg-streamer.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/p910nd.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/usb_printer.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/xunlei.lua
sed -i 's/services/nas/g'  /usr/lib/lua/luci/view/minidlna_status.htm

ln -sf /sbin/ip /usr/bin/ip

sed -i 's/downloads.openwrt.org/openwrt.proxy.ustclug.org/g' /etc/opkg/distfeeds.conf
sed -i 's/http:/https:/g' /etc/opkg/distfeeds.conf
sed -i 's/root::0:0:99999:7:::/root:$1$Je43Lli2$4qj4Nw1xWPrs9WEtY8ArC1:0:0:99999:7:::/g' /etc/shadow







mkdir /home/folder

chmod 777 /home/folder

rm -rf /etc/samba/smb.conf

echo "[global]
        netbios name = Router
        display charset = UTF-8
        interfaces = lo br-lan
        server string = Router
        unix charset = UTF-8
        workgroup = WORKGROUP
        bind interfaces only = yes
        deadtime = 30
        enable core files = no
        invalid users = root
        local master = yes
        map to guest = Bad User
        max protocol = SMB2
        min receivefile size = 16384
        null passwords = yes
        passdb backend = smbpasswd
        security = user
        smb passwd file = /etc/samba/smbpasswd
        socket options = TCP_NODELAY IPTOS_LOWDELAY
        use sendfile = yes

[homes]
        comment     = Home Directories
        browsable   = no
        read only   = no
        create mode = 0750

[Network Shares]
        path = /home/folder
        read only = no
        guest ok = yes
        create mask = 0666
        directory mask = 0777
        browseable = yes
	
	" >/etc/samba/smb.conf
        
        
        



rm -rf /etc/pdnsd.conf

echo "// Sample pdnsd configuration file. Must be customized to obtain a working pdnsd setup!
// Read the pdnsd.conf(5) manpage for an explanation of the options.
// Add or remove '#' in front of options you want to disable or enable, respectively.
// Remove '/*' and '*/' to enable complete sections.

global {
        perm_cache=off;
        cache_dir="/var/pdnsd";
#       pid_file = /var/run/pdnsd.pid;
        run_as="nobody";
        server_ip = 127.0.0.1;  # Use eth0 here if you want to allow other
                                # machines on your network to query pdnsd.
        status_ctl = on;
#       paranoid=on;       # This option reduces the chance of cache poisoning
                           # but may make pdnsd less efficient, unfortunately.
        query_method=tcp_udp;
        min_ttl=1;         # Retain cached entries at least 1 second.
        max_ttl=1w;        # One week.
        timeout=10;        # Global timeout option (10 seconds).
        neg_domain_pol=on;
        udpbufsize=1024;   # Upper limit on the size of UDP messages.
}

# The following section is most appropriate if you have a fixed connection to
# the Internet and an ISP which provides good DNS servers.
server {
        label= "myisp";
        ip = 208.67.222.222;  # Put your ISP's DNS-server address(es) here.
        port = 443;
#       proxy_only=on;     # Do not query any name servers beside your ISP's.
                           # This may be necessary if you are behind some
                           # kind of firewall and cannot receive replies
                           # from outside name servers.
        timeout=4;         # Server timeout; this may be much shorter
                           # that the global timeout option.
        uptest=none;         # Test if the network interface is active.
        interface=eth0;    # The name of the interface to check.
        interval=10m;      # Check every 10 minutes.
        caching=off;
	purge_cache=on;   # Keep stale cache entries in case the ISP's
                           # DNS servers go offline.
        edns_query=yes;    # Use EDNS for outgoing queries to allow UDP messages
                           # larger than 512 bytes. May cause trouble with some
                           # legacy systems.
#       exclude=.thepiratebay.org,  # If your ISP censors certain names, you may
#               .thepiratebay.se,   # want to exclude them here, and provide an
#               .piratebay.org,     # alternative server section below that will
#               .piratebay.se;      # successfully resolve the names.
}

/*
# The following section is more appropriate for dial-up connections.
# Read about how to use pdnsd-ctl for dynamic configuration in the documentation.
server {
        label= "dialup";
#       file = "/etc/ppp/resolv.conf";  # Preferably do not use /etc/resolv.conf
        ip = 208.67.222.222;
        port = 443;
        proxy_only=on;
        timeout=6;
        uptest=none;
        interface = ppp0;
        interval=10m;       # Check the interface every 10 seconds.
        caching=off;
	purge_cache=on;
        preset=off;
}
*/

/*
# The servers provided by OpenDNS are fast, but they do not reply with
# NXDOMAIN for non-existant domains, instead they supply you with an
# address of one of their search engines. They also lie about the addresses of
# of the search engines of google, microsoft and yahoo.
# If you do not like this behaviour the "reject" option may be useful.
server {
        label = "opendns";
        ip = 208.67.222.222;
        port = 443;
        reject = 208.69.32.0/24,  # You may need to add additional address ranges
                 208.69.34.0/24,  # here if the addresses of their search engines
                 208.67.219.0/24; # change.
        reject_policy = fail;     # If you do not provide any alternative server
                                  # sections, like the following root-server
                                  # example, "negate" may be more appropriate here.
        timeout = 6;
        uptest = none;            # Test availability using ICMP echo requests.
#        ping_timeout = 100;       # ping test will time out after 10 seconds.
        interval = 15m;           # Test every 15 minutes.
        caching=off;
	preset = off;
}
*/
/*
# This section is meant for resolving from root servers.
server {
        label = "root-servers";
#        root_server = discover; # Query the name servers listed below
                                # to obtain a full list of root servers.
#        randomize_servers = on; # Give every root server an equal chance
                                # of being queried.
        ip = 208.67.220.220;     # This list will be expanded to the full

        port = 443;
        timeout = 6;
#        uptest = query;         # Test availability using empty DNS queries.
	uptest = none;
#       query_test_name = .;    # To be used if remote servers ignore empty queries.
        interval = 10m;         # Test every half hour.
	caching=off;
#        ping_timeout = 300;     # Test should time out after 30 seconds.
        purge_cache = on;
#       edns_query = yes;       # Use EDNS for outgoing queries to allow UDP messages
                                # larger than 512 bytes. May cause trouble with some
                                # legacy systems.
        exclude = .localdomain;
        policy = included;
        preset = off;
}
*/

source {
        owner=localhost;
#       serve_aliases=on;
        file="/etc/hosts";
}

/*
include {file="/etc/pdnsd.include";}    # Read additional definitions from /etc/pdnsd.include.
*/

rr {
        name=localhost;
        reverse=on;
        a=127.0.0.1;
        owner=localhost;
        soa=localhost,root.localhost,42,86400,900,86400,86400;
}

/*
neg {
        name=doubleclick.net;
        types=domain;   # This will also block xxx.doubleclick.net, etc.
}
*/

/*
neg {
        name=bad.server.com;   # Badly behaved server you don't want to connect to.
        types=A,AAAA;
}
*/" >/etc/pdnsd.conf




######## myaliddns ###########

echo "#!/bin/bash
step=2
for (( i = 0; i < 55; i=(i+step) )); do
    /usr/sbin/aliddns
    sleep $step
done
exit 0
" > /usr/sbin/myaliddns

chmod +x /usr/sbin/myaliddns


########### end ##############





echo "#!/bin/bash

echo \"config core 'main'
        option resourcebase '/luci-static/resources'
        option mediaurlbase '/luci-static/argon'
        option lang 'en'

config extern 'flash_keep'
        option uci '/etc/config/'
        option dropbear '/etc/dropbear/'
        option openvpn '/etc/openvpn/'
        option passwd '/etc/passwd'
        option opkg '/etc/opkg.conf'
        option firewall '/etc/firewall.user'
        option uploads '/lib/uci/upload/'

config internal 'languages'
        option en 'English'

config internal 'sauth'
        option sessionpath '/tmp/luci-sessions'
        option sessiontime '3600'

config internal 'ccache'
        option enable '1'

config internal 'themes'
        option Argon '/luci-static/argon'

config internal 'diag'
        option dns 'openwrt.org'
        option ping 'openwrt.org'
        option route 'openwrt.org'\" >/etc/config/luci" >/usr/sbin/myluci
        
chmod +x /usr/sbin/myluci

echo "30 4 * * 0 sh /usr/sbin/myluci"  >>/etc/crontabs/root





        

sed -i "s/# //g" /etc/opkg/distfeeds.conf

sed -i '/REDIRECT --to-ports 53/d' /etc/firewall.user
echo "iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53" >> /etc/firewall.user
echo "iptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53" >> /etc/firewall.user

sed -i '/option disabled/d' /etc/config/wireless
sed -i '/set wireless.radio${devidx}.disabled/d' /lib/wifi/mac80211.sh

sed -i '/DISTRIB_REVISION/d' /etc/openwrt_release
echo "DISTRIB_REVISION='R20.3.19'" >> /etc/openwrt_release
sed -i '/DISTRIB_DESCRIPTION/d' /etc/openwrt_release
echo "DISTRIB_DESCRIPTION='Interstellar '" >> /etc/openwrt_release

sed -i '/log-facility/d' /etc/dnsmasq.conf
echo "log-facility=/dev/null" >> /etc/dnsmasq.conf

sed -i 's/cbi.submit\"] = true/cbi.submit\"] = \"1\"/g' /usr/lib/lua/luci/dispatcher.lua

echo 'hsts=0' > /root/.wgetrc

rm -rf /tmp/luci-modulecache/
rm -f /tmp/luci-indexcache

exit 0
